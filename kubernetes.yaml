---
# API deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mobilidade-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mobilidade-api
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: mobilidade-api
    spec:
      containers:
        - name: mobilidade-api
          image: gcr.io/PROJECT_ID/IMAGE_API:TAG
          ports:
            - containerPort: 3000
          env:
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: envs
                  key: JWT_SECRET
            - name: MONGODB_URL
              value: mongodb://mongodb:27017/node-boilerplate
      restartPolicy: Always

---
# API service
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mobilidade-api
  name: mobilidade-api
spec:
  ports:
    - name: "3000"
      port: 80
      targetPort: 3000
  selector:
    app: mobilidade-api

---
# API Ingress
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: mobilidade-api-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: api-mobilidade.gabriel-milan.com
      http:
        paths:
          - path: /
            backend:
              serviceName: mobilidade-api
              servicePort: 80

---
# MongoDB PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: dbdata
  name: dbdata
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
# MongoDB deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongodb
  name: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - image: mongo:4.2.1-bionic
          name: mongodb
          ports:
            - containerPort: 27017
          volumeMounts:
            - mountPath: /data/db
              name: dbdata
      restartPolicy: Always
      volumes:
        - name: dbdata
          persistentVolumeClaim:
            claimName: dbdata

---
# MongoDB service
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mongodb
  name: mongodb
spec:
  ports:
    - name: "27017"
      port: 27017
      targetPort: 27017
  selector:
    app: mongodb

---
# Web app deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mobilidade-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mobilidade-app
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: mobilidade-app
    spec:
      containers:
        - name: mobilidade-app
          image: gcr.io/PROJECT_ID/IMAGE_APP:TAG
          ports:
            - containerPort: 80
      restartPolicy: Always

---
# Web app service
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mobilidade-app
  name: mobilidade-app
spec:
  ports:
    - name: "80"
      port: 80
      targetPort: 80
  selector:
    app: mobilidade-app

---
# Web app Ingress
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: mobilidade-app-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: app-mobilidade.gabriel-milan.com
      http:
        paths:
          - path: /
            backend:
              serviceName: mobilidade-app
              servicePort: 80
